name: 'greencity'

services:
  core:
    image: ghcr.io/ptarasyuk/greencityinfra/core:v0.0.1-d90e082
    # build:
    #   context: ../backcore/
    #   dockerfile: Dockerfile
    container_name: core
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file: "./envs/dev/.core.env"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/swagger-ui/index.html"]
      interval: 60s
      timeout: 3s
      retries: 3
      start_period: 120s

  user:
    image: ghcr.io/ptarasyuk/greencityinfra/user:v0.0.0-5b2dfab
    # build:
    #   context: ../backuser/
    #   dockerfile: Dockerfile
    container_name: user
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8060:8060"
    env_file: "./envs/dev/.user.env"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8060/swagger-ui/index.html"]
      interval: 60s
      timeout: 3s
      retries: 3
      start_period: 120s

  front:
    image: ghcr.io/ptarasyuk/greencityinfra/front:v0.0.0-fb3b45f
    # build:
    #   context: ../frontend/
    #   dockerfile: Dockerfile
    container_name: front
    depends_on:
      core:
        condition: service_healthy
      user:
        condition: service_healthy
    ports:
      - "80:80"
    volumes:
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

  db:
    image: postgres:15-alpine
    container_name: db
    # ports:
    #   - "5432:5432"
    env_file: "./envs/dev/.db.env"
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - db-data:/var/lib/postgresql/data
      # - ../backcore/db/data.sql:/docker-entrypoint-initdb.d/2-data.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data: